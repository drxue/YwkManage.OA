<#+
// <copyright file="ModelMappingTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class ModelMappingTemplate : CSharpTemplate
{
		private YwkManage.OA.Common.T4ModelInfo _model;
			
		public ModelMappingTemplate(YwkManage.OA.Common.T4ModelInfo model)
		{
			_model = model;
		}

		/// <summary>
		/// 获取 生成的文件名，根据模型名定义
		/// </summary>
		public string FileName
		{
			get
			{ 
				return string.Format("{0}Mapping.cs", _model.Name);
			}
		}

		public override string TransformText()
		{
	#>
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     此代码由T4 Toolbox工具生成。
	//     对此文件的更改可能会导致不正确的行为，并且如果
	//     重新生成代码，这些更改将会丢失。
	//        如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类实现 <#= _model.Name #>分部方法（partial）。
	//		  将本文件拷贝到目录外即Mapping目录下，根据示例修改各项属性。
	// </auto-generated>
	//
	// <copyright file="<#= _model.Name #>ModelMapping.generated.cs">
	//  
	//        所属工程：YwkManage.OA 中西医薛思源
	//        生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
	// </copyright>
	//------------------------------------------------------------------------------

	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
	using System.Threading.Tasks;
	using System.Data.Entity.ModelConfiguration;

	namespace YwkManage.OA.Model.Mapping
	{
		/// <summary>
		/// 模型关系设置，Fruent API设置，ModelMapping-数据表映射——<#= _model.Description #>
		/// </summary> 
	   public partial class <#= _model.Name #>Mapping:EntityTypeConfiguration<<#= _model.Name #>>
		{
		//示例
			//public <#= _model.Name #>Mapping()
			//{
				//// Primary Key
				//this.HasKey(e => e.LID);
				//// Properties
				//this.Property(e => e.EmployeeID)
				//    .IsRequired()
				//    .HasMaxLength(10);
				//this.Property(e => e.Destination)
				//    .HasMaxLength(50);
				//// Table & Column Mappings
				//this.ToTable("Leave");
				//// Relationships
				//this.HasOptional(e => e.ProjectClassify)
				//    .WithMany(e => e.Leave)
				//    .HasForeignKey(e => e.ProjectClassifyID);
				//this.HasRequired(e => e.Employees)
				//    .WithMany(e => e.Leave)
				//    .HasForeignKey(e => e.EmployeeID);
			//}
		}
	}
	
	<#+	
		return this.GenerationEnvironment.ToString();
		}
}
#>